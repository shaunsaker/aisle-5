// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RemovePendingItemModal methods should handle removePendingListItem 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "payload": Object {
          "itemID": "Beer",
        },
        "type": "REMOVE_PENDING_LIST_ITEM",
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": undefined,
    },
  ],
}
`;

exports[`RemovePendingItemModal renders renders with minimum required props 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(0, 0, 0, 0.67)",
      "bottom": 0,
      "left": 0,
      "opacity": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "stretch",
            "flex": 1,
          },
          Object {},
        ]
      }
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        bounces={false}
        contentContainerStyle={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableOnAndroid={false}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        scrollEnabled={false}
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollIntoView={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        update={[Function]}
        viewIsInsideTabBar={false}
      >
        <View>
          <View
            style={
              Object {
                "backgroundColor": "#EDE8CA",
                "borderColor": null,
                "borderRadius": 5,
                "borderWidth": 0,
                "elevation": 12,
                "marginHorizontal": 15,
                "marginVertical": 10,
                "maxWidth": 480,
                "paddingHorizontal": 30,
                "paddingVertical": 20,
                "shadowColor": "#212121",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.33,
                "shadowRadius": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "marginBottom": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#212121",
                    "fontFamily": "Muli-SemiBold",
                    "fontSize": 17,
                    "marginBottom": 10,
                    "textAlign": "center",
                  }
                }
              >
                Are you sure you want to remove 
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#212121",
                    "fontFamily": "ArchivoBlack-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                    "marginBottom": 10,
                    "textAlign": "center",
                  }
                }
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#212121",
                    "fontFamily": "Muli-SemiBold",
                    "fontSize": 17,
                    "marginBottom": 10,
                    "textAlign": "center",
                  }
                }
              >
                 from your list?
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#FFFFFF",
                      "borderColor": null,
                      "borderRadius": 5,
                      "borderWidth": 0,
                      "elevation": 6,
                      "opacity": 1,
                      "paddingHorizontal": 15,
                      "paddingVertical": 10,
                      "shadowColor": "#212121",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.33,
                      "shadowRadius": 2,
                    }
                  }
                  testID="removePendingItemModal.button.cancel"
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#212121",
                          "fontFamily": "Muli-Bold",
                          "fontSize": 17,
                        },
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    No
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "width": 15,
                  }
                }
              />
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#D17623",
                      "borderColor": null,
                      "borderRadius": 5,
                      "borderWidth": 0,
                      "elevation": 6,
                      "opacity": 1,
                      "paddingHorizontal": 15,
                      "paddingVertical": 10,
                      "shadowColor": "#212121",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.33,
                      "shadowRadius": 2,
                    }
                  }
                  testID="removePendingItemModal.button.submit"
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#212121",
                          "fontFamily": "Muli-Bold",
                          "fontSize": 17,
                        },
                        Object {
                          "color": "#EDE8CA",
                        },
                        undefined,
                      ]
                    }
                  >
                    Yes
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
